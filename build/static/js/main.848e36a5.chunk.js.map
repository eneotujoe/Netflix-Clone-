{"version":3,"sources":["img/logo.png","components/Nav.js","requests.js","components/Banner.js","components/Row.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","useState","show","handleShow","useEffect","window","addEventListener","scrollY","removeEventListener","className","src","logo","alt","baseUrl","API_KEY","requests","fetchNetflixOriginals","fetchTrending","fetchTopRated","fetchDocumentaries","fetchPopular","fetchHorror","Banner","str","n","movie","setMovie","a","axios","get","req","data","results","Math","floor","random","length","fetchData","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview","substr","Row","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","map","poster_path","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","console","log","catch","error","handleClick","id","videoId","opts","height","width","playerVars","autoplay","Footer","Date","getFullYear","App","Helmet","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.848e36a5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.f4070143.png\";","import React, { useEffect, useState } from 'react'\nimport '../styles/Nav.css';\nimport logo from '../img/logo.png';\n\nfunction Nav() {\n    const [show, handleShow] = useState(false)\n    useEffect(() => {\n        window.addEventListener('scroll', () => {\n            if (window.scrollY > 100) {\n                handleShow(true);\n            } else handleShow(false);\n        });\n        return () => {\n            window.removeEventListener('scroll')\n        }\n    }, [])\n    return (\n        <div>\n            <nav className={`nav ${show && 'nav__black'}`}>\n                <img className='nav__logo' src={logo} alt='Netflix Logo' />\n            </nav>\n        </div>\n    )\n}\n\nexport default Nav\n","const baseUrl = 'https://api.themoviedb.org/3'\nconst API_KEY = '68bc76434228327d2f86e69c5d217448'\n\nconst requests = {\n    fetchNetflixOriginals: `${baseUrl}/trending/tv/week?api_key=${API_KEY}&language=en-US&page=1`,\n    fetchTrending: `${baseUrl}/trending/tv/day?api_key=${API_KEY}&language=en-US&page=2`,\n    fetchTopRated: `${baseUrl}/trending/tv/day?api_key=${API_KEY}&language=en-US&page=3`,\n    fetchDocumentaries: `${baseUrl}/trending/tv/day?api_key=${API_KEY}&language=en-US&page=4`,\n    fetchPopular: `${baseUrl}/trending/tv/day?api_key=${API_KEY}&language=en-US&page=5`,\n    fetchHorror: `${baseUrl}/trending/tv/day?api_key=${API_KEY}&language=en-US&page=6`,\n    // fetchTrending: `${baseUrl}/discover/movie?api_key=${API_KEY}&language=en-US`,\n    // fetchTopRated: `${baseUrl}/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    // fetchDocumentaries: `${baseUrl}/discover/movie?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=2`,\n    // fetchPopular: `${baseUrl}/movie/popular?api_key=${API_KEY}&language=en-US&page=3`,\n    // fetchHorror: `${baseUrl}/discover/movie?api_key=${API_KEY}&language=en-US&page=4`,\n}\n\nexport default requests;","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport requests from '../requests'\nimport '../styles/Banner.css'\n\nfunction Banner() {\n    const [movie, setMovie] = useState([])\n\n    useEffect(() => {\n        async function fetchData() {\n            const req = await axios.get(requests.fetchNetflixOriginals)\n            setMovie(req.data.results[\n                Math.floor(Math.random() * req.data.results.length - 1)\n            ]\n            )\n            return req\n        }\n        fetchData()\n        \n    }, [])\n    function truncate(str, n) {\n        return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n    }\n\n    return (\n        <header\n            className='banner'\n            style={{\n                backgroundSize: 'cover',\n                backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n                backgroundPosition: 'center center',\n             }}\n        >\n            <div className='banner__contents'>\n                <h1 className='banner__title'>{movie?.title || movie?.name || movie?.original_name}</h1>\n                <div className='banner__buttons'>\n                    <button className='banner__button'>Play</button>\n                    <button className='banner__button'>My List</button>\n                </div>\n                <h1 className='banner__description'>{ truncate(movie?.overview, 150) }</h1>\n            </div>\n            <div className='banner__fade__bottom' />\n            \n        </header>\n    )\n}\n\nexport default Banner\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport '../styles/Row.css'\nimport YouTube from 'react-youtube'\nimport movieTrailer from 'movie-trailer'\n\nfunction Row({ title, fetchUrl,isLargeRow }) {\n    const [movies, setMovies] = useState([])\n    const [trailerUrl, setTrailerUrl] = useState('')\n    const imageUrl = 'https://image.tmdb.org/t/p/original'\n\n    useEffect(() => {\n        async function fetchData() {\n            const req = await axios.get(fetchUrl)\n            setMovies(req.data.results)\n            return req\n        }\n        fetchData()\n\n    }, [fetchUrl])\n    const opts = {\n        height: '390',\n        width: '100%',\n        playerVars: {\n            // https://developers.google.com/youtube/player_parameters,\n            autoplay: 1,\n        },\n    }\n    const handleClick = (movie) => {\n        if (trailerUrl) {\n            setTrailerUrl('');\n        } else {\n            movieTrailer(movie?.name || '')\n                .then((url) => {\n                // https://www.youtube.com/watch?v=XtMThy8QKqU&t=2565s\n                    const urlParams = new URLSearchParams(new URL(url).search)\n                    setTrailerUrl(urlParams.get('v'))\n                    console.log(url)\n                })\n            .catch((error) => console.log(error))\n        }\n    }\n\n    return (\n        <div className='row'>\n            <h1 className='row__title'>{ title }</h1>\n            <div className='row__posters'>\n              { movies.map( movie => ( \n                  <img\n                      className={`row__poster ${isLargeRow && 'row__poster__large'}`}\n                      src={`${imageUrl}/${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\n                      alt={movie.title}\n                      key={movie.id}\n                      onClick= { () => handleClick(movie) }\n                  />\n              )) }\n            </div>\n            { trailerUrl && <YouTube videoId={trailerUrl} opts={opts} /> }\n        </div>\n    )\n}\n\nexport default Row;\n","import '../styles/Footer.css';\n\nfunction Footer() {\n    \n    return (\n        <div className='footer'>\n            <p>&copy; { new Date().getFullYear() } - Netflix Clone</p>\n        </div>\n    )\n}\n\nexport default Footer\n","import './styles/App.css'\nimport Nav from './components/Nav'\nimport Banner from './components/Banner'\nimport Row from './components/Row'\nimport requests from './requests'\nimport { Helmet } from \"react-helmet\"\nimport Footer from './components/Footer'\n\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Helmet>\n        <title>Eneotu | Netflix Clone</title>\n      </Helmet>\n      <Nav />\n      <Banner />\n      <Row title='Netflix Originals' fetchUrl={requests.fetchNetflixOriginals} isLargeRow />\n      <Row title='Trending Now' fetchUrl={requests.fetchTrending} />\n      <Row title='Top Rated' fetchUrl={requests.fetchTopRated} />\n      <Row title='Documentaries' fetchUrl={requests.fetchDocumentaries} />\n      <Row title='Popular' fetchUrl={requests.fetchPopular} />\n      <Row title='Horror' fetchUrl={requests.fetchHorror} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}